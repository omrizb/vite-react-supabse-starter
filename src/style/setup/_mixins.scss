@import '../_theme.scss';

/* Media queries Breakpoint mixins */

@mixin mobile-layout {
    @media (max-width: $break-sm) {
        @content;
    }
}
  
@mixin narrow-layout {
    @media (min-width: $break-md) {
        @content;
    }
}
  
@mixin normal-layout {
    @media (min-width: $break-lg) {
        @content;
    }
}
  
@mixin wide-layout {
    @media (min-width: $break-xl) {
        @content;
    }
}
  
@mixin layout-gtc($max) {
    grid-template-columns:
        minmax($layout-padding, 1fr) minmax(auto, $max) minmax($layout-padding, 1fr);
}
  
/* Media  Mixins */

//aspect ratio mixin
@mixin aspect-ratio($width: 1, $height: 1) {
    position: relative;
    overflow: hidden;

    &:before {
        content: "";
        display: block;
        width: 100%;
        padding-top: calc(($height / $width) * 100%);
    }

    >* {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

    >img {
        height: 100%;
        object-fit: cover;
    }
}
  
// Mixin for removing hover effects on iphone screen
@mixin hover-supported {
    @media not all and (pointer: coarse) {
        &:hover {
            @content;
        }
    }
}
  
// Buttons
  
@mixin btn($type: regular, $bg: $clr-primary, $clr: $clr-white, $padding: $spacing-6 $spacing-8, $hover: $clr-primary-dark) {
    display: inline-flex;
    align-items: center;
    text-decoration: none;
    text-transform: uppercase;
    padding: $padding;
    line-height: $line-height-normal;
    font-size: $font-size-sm;
    font-weight: $font-weight-medium;
    border: none;
    cursor: pointer;
  
    transition: background-color $transition-normal;
  
    @if $type == regular {
        background-color: $bg;
        color: $clr;
    
        &:hover {
            background-color: $hover;
        }
    }
  
    @else if $type == dark {
        background-color: $clr-gray-800;
        color: $clr-white;
  
        &:hover {
            background-color: $clr-primary;
            color: $clr-white;
        }
    }
  
    @else if $type == light {
        background-color: $clr-white;
        color: $clr-primary;
  
        &:hover {
            background-color: $clr-gray-100;
            color: $clr-primary;
        }
    }
}
  
// Type
  
@mixin type($type: bold) {

    // type options: 
    // 1.bold 
    // 2.boldCondensed 
    // 3.condensed
    @if $type == bold {
        font-variation-settings: "wght" 430;
    }

    @else if $type == boldCondensed {
        font-variation-settings: "wght" 430, "wdth" 80;
        letter-spacing: em(6.72px);
    }

    @else if $type == condensed {
        font-variation-settings: "wdth" 80;
        letter-spacing: em(6.72px);
    }

    @else if $type == light {
        font-variation-settings: "wght" 200;
    }
}
